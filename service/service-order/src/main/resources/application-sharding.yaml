# 配置真实数据源
#spring.shardingsphere.datasource.names=ds1,ds2

#读写分离+分库分表
spring:
  shardingsphere:
    #配置数据源
    datasource:
      names: ds-master-order-0,ds-s1-order-0,ds-s2-order-0,ds-master-order-1,ds-s1-order-1,ds-s2-order-1
      ds-master-order-0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.200.100:3306/gmall_order_0?useSSL=false&characterEncoding=utf-8
        username: root
        password: root

      ds-master-order-1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.200.100:3306/gmall_order_1?useSSL=false&characterEncoding=utf-8
        username: root
        password: root

      ds-s1-order-0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.200.100:3307/gmall_order_0?useSSL=false&characterEncoding=utf-8
        username: root
        password: root

      ds-s2-order-0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.200.100:3308/gmall_order_0?useSSL=false&characterEncoding=utf-8
        username: root
        password: root

      ds-s1-order-1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.200.100:3307/gmall_order_1?useSSL=false&characterEncoding=utf-8
        username: root
        password: root

      ds-s2-order-1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.200.100:3308/gmall_order_1?useSSL=false&characterEncoding=utf-8
        username: root
        password: root
    rules:
      #配置读写分类规则
      readwrite-splitting:
        data-sources:
          rw-ds-order-0:
            type: Static
            props:
              write-data-source-name: ds-master-order-0
              read-data-source-names: ds-s1-order-0,ds-s2-order-0
            load-balancer-name: round-lb

          rw-ds-order-1:
            type: Static
            props:
              write-data-source-name: ds-master-order-1
              read-data-source-names: ds-s1-order-1,ds-s2-order-1
            load-balancer-name: round-lb
        load-balancers:
          round-lb:
            type: ROUND_ROBIN

      #配置数据分片规则
      sharding:
        #配置表的分片规则
        tables:
          #这个订单info的逻辑表  insert into order_info values(xx,xx,xx,8)
          order_info:
            #在真正的哪几个数据节点
            actual-data-nodes:  ds-master-order-$->{0..1}.order_info_$->{0..2}
            #分片规则-数据库分片规则
            database-strategy:
              standard:
                #指定这个表的分片键，用来进行分库
                sharding-column: user_id
                sharding-algorithm-name: moduser-2
            #分片规则-表分片规则
            table-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: moduser-3
            key-generate-strategy:
              column: id
              key-generator-name: snow-alg
          order_detail:
            #在真正的哪几个数据节点
            actual-data-nodes: ds-master-order-$->{0..1}.order_detail_$->{0..2}
            #分片规则-数据库分片规则。order_info和order_detail分库规则一定一样。 order_info left join  order_detail
            database-strategy:
              standard:
                #指定这个表的分片键，用来进行分库
                sharding-column: user_id
                sharding-algorithm-name: moduser-2
            #分片规则-表分片规则
            table-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: moduser-detail-3

          order_status_log:
            #在真正的哪几个数据节点
            actual-data-nodes: ds-master-order-$->{0..1}.order_status_log_$->{0..2}
            #分片规则-数据库分片规则
            database-strategy:
              standard:
                #指定这个表的分片键，用来进行分库
                sharding-column: user_id
                sharding-algorithm-name: moduser-2
            #分片规则-表分片规则
            table-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: moduser-status-log-3

          payment_info:
            #在真正的哪几个数据节点
            actual-data-nodes: ds-master-order-$->{0..1}.payment_info_$->{0..2}
            #分片规则-数据库分片规则
            database-strategy:
              standard:
                #指定这个表的分片键，用来进行分库
                sharding-column: user_id
                sharding-algorithm-name: moduser-2
            #分片规则-表分片规则
            table-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: moduser-pay-3

        #指定分片算法
        sharding-algorithms:
          moduser-2:
            type: INLINE
            props:
              algorithm-expression: ds-master-order-$->{user_id%2}

          moduser-3:
            type: INLINE
            props:
              algorithm-expression: order_info_$->{user_id%3}
          moduser-detail-3:
            type: INLINE
            props:
              algorithm-expression: order_detail_$->{user_id%3}
          moduser-status-log-3:
            type: INLINE
            props:
              algorithm-expression: order_status_log_$->{user_id%3}
          moduser-pay-3:
            type: INLINE
            props:
              algorithm-expression: payment_info_$->{user_id%3}

        #指定id生成器
        key-generators:
          snow-alg:
            type: SNOWFLAKE
#        binding-tables:
#          - order_info,order_detail
#          - order_info,order_status_log
    props:
      sql-show: true

